"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{619:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var l=i(4848),r=i(8453);const s={sidebar_position:1},t="Vehicle Allocation (Vallocation)",a={id:"intro",title:"Vehicle Allocation (Vallocation)",description:"A fast and efficient Vehicle Allocation System built using FastAPI and MongoDB, designed to allow employees to allocate vehicles for specific dates, manage allocation statuses, and handle driver assignments. The system ensures that a vehicle is not double-booked and enforces date restrictions to prevent allocation modifications after the allocation date.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/vallocation/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Resources",permalink:"/vallocation/docs/resources"}},o={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Features",id:"features",level:2},{value:"Tech Stack",id:"tech-stack",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"1. Clone the repository",id:"1-clone-the-repository",level:3},{value:"2. Create a virtual environment",id:"2-create-a-virtual-environment",level:3},{value:"3. Install the required dependencies",id:"3-install-the-required-dependencies",level:3},{value:"4. Set up environment variables",id:"4-set-up-environment-variables",level:3},{value:"5. Run the application",id:"5-run-the-application",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Create an Allocation",id:"create-an-allocation",level:3},{value:"Update an Allocation",id:"update-an-allocation",level:3},{value:"Delete an Allocation",id:"delete-an-allocation",level:3},{value:"Get Allocation History",id:"get-allocation-history",level:3},{value:"Example Request:",id:"example-request",level:4},{value:"Example Response:",id:"example-response",level:4},{value:"Pagination &amp; Filters:",id:"pagination--filters",level:4},{value:"Database Schema",id:"database-schema",level:2},{value:"Contributors",id:"contributors",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"vehicle-allocation-vallocation",children:"Vehicle Allocation (Vallocation)"})}),"\n",(0,l.jsxs)(n.p,{children:["A fast and efficient ",(0,l.jsx)(n.strong,{children:"Vehicle Allocation System"})," built using ",(0,l.jsx)(n.strong,{children:"FastAPI"})," and ",(0,l.jsx)(n.strong,{children:"MongoDB"}),", designed to allow employees to allocate vehicles for specific dates, manage allocation statuses, and handle driver assignments. The system ensures that a vehicle is not double-booked and enforces date restrictions to prevent allocation modifications after the allocation date."]}),"\n",(0,l.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#features",children:"Features"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#tech-stack",children:"Tech Stack"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#requirements",children:"Requirements"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#project-structure",children:"Project Structure"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#api-endpoints",children:"API Endpoints"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#create-an-allocation",children:"Create an Allocation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#update-an-allocation",children:"Update an Allocation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#delete-an-allocation",children:"Delete an Allocation"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#get-allocations",children:"Get Allocations"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#database-schema",children:"Database Schema"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#testing",children:"Testing"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#contributors",children:"Contributors"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Vehicle Allocation System"})," is a RESTful API that allows employees to reserve vehicles for specific days. Each vehicle has an assigned driver, and only one vehicle can be allocated per employee for a given day. Additionally, users can view, update, and delete allocations, provided the actions are performed before the allocated date."]}),"\n",(0,l.jsx)(n.p,{children:"This project is designed to handle a high number of users and vehicles, with optimizations for load handling and database efficiency."}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Create Allocations:"})," Employees can allocate vehicles for future dates."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Update Allocations:"})," Modify existing allocations before the allocation date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Delete Allocations:"})," Cancel allocations before the allocation date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Conflict Prevention:"})," Prevents multiple allocations of the same vehicle on the same date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Status Tracking:"})," Tracks the status of each allocation (e.g., pending, confirmed, canceled)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Driver Assignment:"})," Each vehicle is pre-assigned to a driver."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Performance Optimized:"})," Handles a large number of concurrent users and operations."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"tech-stack",children:"Tech Stack"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Backend:"})," FastAPI"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Database:"})," MongoDB (Async with Motor)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"ORM:"})," Pydantic (For schema validation)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Environment Management:"})," Python virtual environment"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Testing:"})," Pytest"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Python 3.9+"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"MongoDB"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"FastAPI"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Pydantic"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Motor"})," (Async MongoDB driver)"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.p,{children:"Follow these steps to set up and run the project locally."}),"\n",(0,l.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the repository"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/FahimFBA/vallocation\r\ncd vallocation\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-create-a-virtual-environment",children:"2. Create a virtual environment"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"python -m venv env\r\nsource env/bin/activate  # On Windows: `env\\Scripts\\activate`\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-install-the-required-dependencies",children:"3. Install the required dependencies"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"pip install -r requirements.txt\n"})}),"\n",(0,l.jsx)(n.h3,{id:"4-set-up-environment-variables",children:"4. Set up environment variables"}),"\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:".env"})," file in the root directory with the following content:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"MONGO_USERNAME=your_username\r\nMONGO_PASSWORD=your_password\r\nMONGO_CLUSTER_URL=your_mongodb_cluster_name\n"})}),"\n",(0,l.jsx)(n.h3,{id:"5-run-the-application",children:"5. Run the application"}),"\n",(0,l.jsx)(n.p,{children:"Start the FastAPI server:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"uvicorn main:app --reload\n"})}),"\n",(0,l.jsx)(n.p,{children:"or,"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"fastapi dev main.py\n"})}),"\n",(0,l.jsxs)(n.p,{children:["The API will now be available at ",(0,l.jsx)(n.code,{children:"http://127.0.0.1:8000"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"vallocation/\r\n\u2502\r\n\u251c\u2500\u2500 config/\r\n\u2502   \u2514\u2500\u2500 database.py        # Database configuration for MongoDB\r\n\u2502\r\n\u251c\u2500\u2500 docs/                  # Documentation (Docusaurus)\r\n\u2502\r\n\u251c\u2500\u2500 models/\r\n\u2502   \u2514\u2500\u2500 vallocation_model.py   # Pydantic model for vehicle allocations\r\n\u2502\r\n\u251c\u2500\u2500 routers/\r\n\u2502   \u2514\u2500\u2500 route.py           # FastAPI routes for vehicle allocation\r\n\u2502\r\n\u251c\u2500\u2500 schemas/\r\n\u2502   \u2514\u2500\u2500 schemas.py         # Pydantic schemas for request/response models\r\n\u2502\r\n\u251c\u2500\u2500 .env.example           # Example environment variables file\r\n\u251c\u2500\u2500 .gitignore             # Git ignore rules\r\n\u251c\u2500\u2500 LICENSE                # License file for the project\r\n\u251c\u2500\u2500 main.py                # Entry point of the FastAPI application\r\n\u251c\u2500\u2500 requirements.txt       # Python dependencies for the project\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,l.jsx)(n.h3,{id:"create-an-allocation",children:"Create an Allocation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Endpoint:"})," ",(0,l.jsx)(n.code,{children:"POST /allocate"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Description:"})," Allocates a vehicle for a given employee on a specified date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Request Body:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "employee_id": 101,\r\n  "vehicle_id": 456,\r\n  "allocation_date": "2024-11-01"\r\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Response:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "id": "60c72b2f9b7e4e2d88d0f66b",\r\n  "employee_id": 101,\r\n  "vehicle_id": 456,\r\n  "driver_id": 45,\r\n  "allocation_date": "2024-11-01",\r\n  "status": "pending"\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"update-an-allocation",children:"Update an Allocation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Endpoint:"})," ",(0,l.jsx)(n.code,{children:"PUT /allocate/{allocation_id}"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Description:"})," Updates an existing allocation (e.g., change date or status)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Request Body:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "allocation_date": "2024-11-02",\r\n  "status": "confirmed"\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"delete-an-allocation",children:"Delete an Allocation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Endpoint:"})," ",(0,l.jsx)(n.code,{children:"DELETE /allocate/{allocation_id}"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Description:"})," Deletes an allocation before the allocation date."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Response:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "message": "Allocation deleted successfully"\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"get-allocation-history",children:"Get Allocation History"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Endpoint:"})," ",(0,l.jsx)(n.code,{children:"GET /history/"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Description:"})," Fetches allocation history with optional filters (e.g., by employee, vehicle, driver, or allocation date) and supports pagination."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Query Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"employee_id"})," (optional): Filter allocations by employee ID."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"vehicle_id"})," (optional): Filter allocations by vehicle ID."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"driver_id"})," (optional): Filter allocations by driver ID."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"allocation_date"})," (optional): Filter allocations by allocation date (format: ",(0,l.jsx)(n.code,{children:"YYYY-MM-DD"}),")."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"skip"})," (optional, default: 0): Number of records to skip for pagination."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"limit"})," (optional, default: 10): Maximum number of records to return."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Response:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "total": 100,\r\n  "skip": 0,\r\n  "limit": 10,\r\n  "results": [\r\n    {\r\n      "id": "60c72b2f9b7e4e2d88d0f66b",\r\n      "employee_id": 101,\r\n      "vehicle_id": 456,\r\n      "driver_id": 45,\r\n      "allocation_date": "2024-11-01",\r\n      "status": "pending"\r\n    },\r\n    {\r\n      "id": "60c72b3f9b7e4e2d88d0f66c",\r\n      "employee_id": 102,\r\n      "vehicle_id": 457,\r\n      "driver_id": 46,\r\n      "allocation_date": "2024-11-02",\r\n      "status": "confirmed"\r\n    }\r\n  ]\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-request",children:"Example Request:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"GET /history/?employee_id=101&skip=0&limit=10\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-response",children:"Example Response:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n  "total": 100,\r\n  "skip": 0,\r\n  "limit": 10,\r\n  "results": [\r\n    {\r\n      "id": "60c72b2f9b7e4e2d88d0f66b",\r\n      "employee_id": 101,\r\n      "vehicle_id": 456,\r\n      "driver_id": 45,\r\n      "allocation_date": "2024-11-01",\r\n      "status": "pending"\r\n    },\r\n    {\r\n      "id": "60c72b3f9b7e4e2d88d0f66c",\r\n      "employee_id": 101,\r\n      "vehicle_id": 458,\r\n      "driver_id": 47,\r\n      "allocation_date": "2024-11-03",\r\n      "status": "confirmed"\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,l.jsx)(n.h4,{id:"pagination--filters",children:"Pagination & Filters:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The endpoint allows pagination by using the ",(0,l.jsx)(n.code,{children:"skip"})," and ",(0,l.jsx)(n.code,{children:"limit"})," query parameters."]}),"\n",(0,l.jsxs)(n.li,{children:["You can apply multiple filters like ",(0,l.jsx)(n.code,{children:"employee_id"}),", ",(0,l.jsx)(n.code,{children:"vehicle_id"}),", ",(0,l.jsx)(n.code,{children:"driver_id"}),", or ",(0,l.jsx)(n.code,{children:"allocation_date"})," to narrow down the results."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,l.jsx)(n.p,{children:"Each allocation is stored in MongoDB in the following format:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n    "_id": "ObjectId(\'60c72b2f9b7e4e2d88d0f66b\')",\r\n    "employee_id": 101,\r\n    "vehicle_id": 456,\r\n    "driver_id": 45,\r\n    "allocation_date": "2024-11-01",\r\n    "status": "pending"\r\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"contributors",children:"Contributors"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Fahim"})," - Developer, Architect"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.a,{href:"https://github.com/vallocation/contributors",children:"Contributors"})})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Feel free to open issues or submit pull requests to help improve this project!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var l=i(6540);const r={},s=l.createContext(r);function t(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);